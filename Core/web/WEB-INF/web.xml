<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (C) 2014 Infinite Automation Systems Inc. All rights reserved.
    @author Matthew Lohbihler
-->

<!-- <web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  -->
<!--     xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"  -->
<!--     version="2.4"> -->
<!-- <web-app xmlns="http://java.sun.com/xml/ns/javaee" -->
<!--     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" -->
<!--     xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" -->
<!--     version="2.5"> -->
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
    version="3.0">
  <!-- Spring Security must be part of the Root Context so until we move to annotation driven initialization it must be done here in XML -->
  <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
        	/WEB-INF/applicationContext.xml,
            /WEB-INF/spring-security.xml
        </param-value>
    </context-param>
  
  <!-- 
    Filter definitions.
   -->
  <!-- Spring Security -->
  <filter>
	<filter-name>springSecurityFilterChain</filter-name>
	<filter-class>org.springframework.web.filter.DelegatingFilterProxy
	</filter-class>
  </filter>

  <filter>
    <filter-name>CharacterSet</filter-name>
    <filter-class>com.serotonin.web.filter.CharacterSetFilter</filter-class>
    <init-param>
      <param-name>charset</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  
  <filter>
    <filter-name>UrlSecurity</filter-name>
    <filter-class>com.serotonin.m2m2.web.filter.UrlSecurityFilter</filter-class>
  </filter>

  <filter>
    <filter-name>IsLoggedIn</filter-name>
    <filter-class>com.serotonin.m2m2.web.filter.LoggedInFilter</filter-class>
    <init-param>
      <param-name>exceededIpLimitUrl</param-name>
      <param-value>/exception/exceededIpLimitUrl.jsp</param-value>
    </init-param>
  </filter>
  
  <filter>
    <filter-name>WebContext</filter-name>
    <filter-class>com.serotonin.m2m2.web.filter.WebContextFilter</filter-class>
  </filter>
  
  <filter>
    <filter-name>CacheHeaders</filter-name>
    <filter-class>com.serotonin.web.filter.HttpResponseHeaderFilter</filter-class>
    <init-param>
      <param-name>Cache-Control</param-name>
      <param-value>max-age=5184000</param-value>
    </init-param>
  </filter>
  
  <filter>
    <filter-name>Translations</filter-name>
    <filter-class>com.serotonin.m2m2.web.filter.TranslationsFilter</filter-class>
  </filter>
  
  <!-- GZIP Compression Enabling -->
  <filter>
    <filter-name>GzipFilter</filter-name>
      <filter-class>org.eclipse.jetty.servlets.GzipFilter</filter-class>
        <init-param>
          <param-name>mimeTypes</param-name>
          <param-value>text/html,text/plain,text/xml,application/xhtml+xml,text/css,application/javascript,image/svg+xml,application/json,text/javascript,application/x-javascript</param-value>
        </init-param>
  </filter>
  
  <filter>
    <filter-name>UrlRewriteFilter</filter-name>
    <filter-class>com.serotonin.m2m2.web.filter.UrlRewriteFilter</filter-class>
  </filter>

  <filter>
    <description>Filter to ensure we properly decode/encode URLs for the REST API</description>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
        <param-name>encoding</param-name>
        <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
        <param-name>forceEncoding</param-name>
        <param-value>true</param-value>
    </init-param>
</filter>

  
  <!-- 
    Filter mappings.
   -->
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/rest/v1/*</url-pattern>
<!--     To ensure we are within the Security Context if we Login via legacy Servlet -->
    <url-pattern>/login.htm</url-pattern>
    <url-pattern>*.shtm</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/rest/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>GzipFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>UrlRewriteFilter</filter-name>
    <url-pattern>*.js</url-pattern>
    <url-pattern>*.css</url-pattern>
    <url-pattern>*.ico</url-pattern>
    <url-pattern>*.png</url-pattern>
    <url-pattern>*.jpeg</url-pattern>
    <url-pattern>*.jpg</url-pattern>
    <url-pattern>*.gif</url-pattern>
    <url-pattern>*.woff2</url-pattern>
    <url-pattern>*.woff</url-pattern>
    <url-pattern>*.ttf</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>CharacterSet</filter-name>
    <url-pattern>*.htm</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>CharacterSet</filter-name>
    <url-pattern>*.shtm</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>UrlSecurity</filter-name>
    <url-pattern>*.shtm</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>IsLoggedIn</filter-name>
    <url-pattern>*.shtm</url-pattern>
    <url-pattern>/protected/*</url-pattern>   
  </filter-mapping>


  
  <filter-mapping>
    <filter-name>WebContext</filter-name>
    <url-pattern>*.shtm</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>Translations</filter-name>
    <url-pattern>/exception/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>ERROR</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>

  <filter-mapping>
    <filter-name>CacheHeaders</filter-name>
    <url-pattern>/dwr/interfaces/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CacheHeaders</filter-name>
    <url-pattern>/dwr/engine.js</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CacheHeaders</filter-name>
    <url-pattern>/dwr/utils.js</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CacheHeaders</filter-name>
    <url-pattern>/audio/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CacheHeaders</filter-name>
    <url-pattern>/images/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CacheHeaders</filter-name>
    <url-pattern>/graphics/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CacheHeaders</filter-name>
    <url-pattern>/resources/*</url-pattern>
  </filter-mapping>

  
  <!-- 
    Servlet definitions.
   -->
  <servlet>
    <servlet-name>default</servlet-name>
    <servlet-class>org.eclipse.jetty.servlet.DefaultServlet</servlet-class>
    <init-param>
      <param-name>useFileMappedBuffer</param-name>
      <param-value>false</param-value>
    </init-param>  
  </servlet>   
   
  <servlet>
    <servlet-name>springDispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
        <param-name>contextClass</param-name>
        <param-value>
            org.springframework.web.context.support.AnnotationConfigWebApplicationContext
        </param-value>
    </init-param>
    <init-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            com.serotonin.m2m2.web.mvc.spring.MangoCoreSpringConfiguration
        </param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>imageChart</servlet-name>
    <servlet-class>com.serotonin.m2m2.web.servlet.ImageChartServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>asyncImageChart</servlet-name>
    <servlet-class>com.serotonin.m2m2.web.servlet.AsyncImageChartServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>imageValue</servlet-name>
    <servlet-class>com.serotonin.m2m2.web.servlet.ImageValueServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>chartExport</servlet-name>
    <servlet-class>com.serotonin.m2m2.web.servlet.ChartExportServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>eventExport</servlet-name>
    <servlet-class>com.serotonin.m2m2.web.servlet.EventExportServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>mangoStatus</servlet-name>
    <servlet-class>com.serotonin.m2m2.web.servlet.StatusServlet</servlet-class>
  </servlet>
  
  <!-- 
    Servlet mappings.
   -->

<servlet-mapping>
    <servlet-name>springDispatcher</servlet-name>
    <url-pattern>*.htm</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>springDispatcher</servlet-name>
    <url-pattern>*.shtm</url-pattern>
  </servlet-mapping>
  
  <!-- For REST JSON API -->
  <servlet-mapping>
    <servlet-name>springDispatcher</servlet-name>
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>

  <!--  For Swagger REST API DOCUMENTATION -->
  <servlet-mapping>
    <servlet-name>springDispatcher</servlet-name>
    <url-pattern>/api-docs*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>imageChart</servlet-name>
    <url-pattern>/chart/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>asyncImageChart</servlet-name>
    <url-pattern>/achart/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>imageValue</servlet-name>
    <url-pattern>/imageValue/*</url-pattern>
  </servlet-mapping>
 
  <servlet-mapping>
    <servlet-name>chartExport</servlet-name>
    <url-pattern>/chartExport/*</url-pattern>
  </servlet-mapping>
 
  <servlet-mapping>
    <servlet-name>eventExport</servlet-name>
    <url-pattern>/eventExport/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>mangoStatus</servlet-name>
    <url-pattern>/status/*</url-pattern>
  </servlet-mapping> 
  
  <!-- 
    Context listeners.
   -->
  <listener><listener-class>org.springframework.web.context.ContextLoaderListener</listener-class></listener>
  <listener><listener-class>com.serotonin.m2m2.web.M2M2ContextListener</listener-class></listener>
  
  <!-- 
    Other stuff.
   -->
  <session-config>
    <session-timeout>2880</session-timeout>
  </session-config>
    
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
  </welcome-file-list>

  <error-page>
    <exception-type>com.serotonin.m2m2.vo.permission.PermissionException</exception-type>
    <location>/exception/accessDenied.jsp</location>
  </error-page>
  
  <error-page>
    <error-code>500</error-code>
    <location>/exception/error.jsp</location>
  </error-page>
  
  <error-page>
    <error-code>404</error-code>
    <location>/exception/404.jsp</location>
  </error-page>
  
</web-app>
